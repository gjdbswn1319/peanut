{"ast":null,"code":"var _jsxFileName = \"/Users/elly/Desktop/repos/peanut/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [artistInfo, setArtistInfo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleSearch = async () => {\n    if (!searchTerm) return;\n    setLoading(true);\n    try {\n      // Fetch artist info from Flask backend\n      const response = await fetch(`http://localhost:5000/search?q=${searchTerm}`);\n      const data = await response.json();\n      if (data.error) {\n        alert(data.error);\n        setArtistInfo(null);\n      } else {\n        setArtistInfo(data);\n      }\n    } catch (error) {\n      console.error('Error fetching artist:', error);\n      alert('Error fetching artist data.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleAddArtist = async () => {\n    if (!artistInfo) return;\n    try {\n      // Add artist to the backend database\n      const response = await fetch('http://localhost:5000/add', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          artist_id: artistInfo.id,\n          album_length: artistInfo.album_length,\n          image_url: artistInfo.image_url\n        })\n      });\n      const data = await response.json();\n      if (data.message) {\n        alert(data.message);\n      }\n    } catch (error) {\n      console.error('Error adding artist:', error);\n      alert('Error adding artist to the database.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Artist Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search for an artist...\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }, this), artistInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: artistInfo.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), artistInfo.image_url && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: artistInfo.image_url,\n        alt: artistInfo.name,\n        width: \"200\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Album count: \", artistInfo.album_length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddArtist,\n        children: \"Add to Database\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Nl+Aeww9+1gSg2wS8+dWbBthhN8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","searchTerm","setSearchTerm","artistInfo","setArtistInfo","loading","setLoading","handleSearch","response","fetch","data","json","error","alert","console","handleAddArtist","method","headers","body","JSON","stringify","artist_id","id","album_length","image_url","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","name","src","alt","width","_c","$RefreshReg$"],"sources":["/Users/elly/Desktop/repos/peanut/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [artistInfo, setArtistInfo] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const handleSearch = async () => {\n    if (!searchTerm) return;\n\n    setLoading(true);\n\n    try {\n      // Fetch artist info from Flask backend\n      const response = await fetch(`http://localhost:5000/search?q=${searchTerm}`);\n      const data = await response.json();\n\n      if (data.error) {\n        alert(data.error);\n        setArtistInfo(null);\n      } else {\n        setArtistInfo(data);\n      }\n    } catch (error) {\n      console.error('Error fetching artist:', error);\n      alert('Error fetching artist data.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAddArtist = async () => {\n    if (!artistInfo) return;\n\n    try {\n      // Add artist to the backend database\n      const response = await fetch('http://localhost:5000/add', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          artist_id: artistInfo.id,\n          album_length: artistInfo.album_length,\n          image_url: artistInfo.image_url,\n        }),\n      });\n\n      const data = await response.json();\n\n      if (data.message) {\n        alert(data.message);\n      }\n    } catch (error) {\n      console.error('Error adding artist:', error);\n      alert('Error adding artist to the database.');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Artist Search</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Search for an artist...\"\n        value={searchTerm}\n        onChange={(e) => setSearchTerm(e.target.value)}\n      />\n      <button onClick={handleSearch}>Search</button>\n\n      {loading && <p>Loading...</p>}\n\n      {artistInfo && (\n        <div>\n          <h2>{artistInfo.name}</h2>\n          {artistInfo.image_url && <img src={artistInfo.image_url} alt={artistInfo.name} width=\"200\" />}\n          <p>Album count: {artistInfo.album_length}</p>\n          <button onClick={handleAddArtist}>Add to Database</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}